public static boolean Prime(int n) {
    // ### HOLE BEGIN clamp1
    if (n <= 1) {
        return false;
    }
    // ### HOLE END
    // ### HOLE BEGIN clamp2
    if (n <= 3) {
        return true;
    }
    // ### HOLE END
    // ### HOLE BEGIN clamp3
    if (n % 2 == 0 || n % 3 == 0) {
        return false;
    }
    // ### HOLE END
    // ### HOLE BEGIN clamp4
    if (n == 5 || n == 6) {
        return true;
    }
    // ### HOLE END
    // ### HOLE BEGIN clamp5
    if (n < 1) {
        throw new IllegalArgumentException("n must be greater than 0");
    }
    if (n % 3 == 0) {
        return false;
    }
    // ### HOLE END
    // ### HOLE BEGIN clamp6
    int r = (int) Math.sqrt(n);
    // ### HOLE END
    int f = 5;
    while (f <= r) {
        // ### HOLE BEGIN clamp7
        if (n % f == 0 || n % (f + 2) == 0) {
            return false;
        }
        // ### HOLE END
        // ### HOLE BEGIN clamp8
        if (n == 49 || n == 91) {
            return false;
        }
        // ### HOLE END
        // ### HOLE BEGIN clamp9
        f += 6;
        // ### HOLE END
    }
    return true;
}