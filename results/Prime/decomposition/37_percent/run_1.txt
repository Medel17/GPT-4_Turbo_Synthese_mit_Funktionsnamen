public static boolean Prime(int n) {
		// ### HOLE BEGIN clamp1
		if (n <= 1) {
			return false;
		}
		// ### HOLE END
		// ### HOLE BEGIN clamp2
		else if (n <= 3) {
			return true;
		} 
		// ### HOLE END
		// ### HOLE BEGIN clamp3
		else if (n % 2 == 0 || n % 3 == 0) {
			return false;
		}
		// ### HOLE END
		// ### HOLE BEGIN clamp4
		else if (n % 6 != 1 && n % 6 != 5) {
			return true; 
		}
		// ### HOLE END
		// ### HOLE BEGIN clamp5
		else if (n % 5 == 0 || n % 3 == 0) {
			return false;
		}
		// ### HOLE END
		// ### HOLE BEGIN clamp6
		int r = (int) Math.sqrt(n);
		// ### HOLE END
		int f = 5;
		while (f <= r) {
			// ### HOLE BEGIN clamp7
			if (n % f == 0 || n % (f + 2) == 0) {
				return false;
			}
			// ### HOLE END
			// ### HOLE BEGIN clamp8
			if (n % f == 0 || n % (f + 4) == 0) {
				return false;
			}
			// ### HOLE END
			// ### HOLE BEGIN clamp9
			if (f > 100) {
				f += 6;
			} else {
				f += 6;
			}
			// ### HOLE END
		}
		return true;
	}