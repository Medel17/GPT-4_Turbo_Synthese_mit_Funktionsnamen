public static boolean Prime(int n) {
		// ### HOLE BEGIN clamp1
		if (n <= 1) return false;
		// ### HOLE END
		// ### HOLE BEGIN clamp2
		if (n <= 3) return n > 1;
		// ### HOLE END
		// ### HOLE BEGIN clamp3
		if (n % 2 == 0 || n % 3 == 0) return false;
		// ### HOLE END
		// ### HOLE BEGIN clamp4
		// Intentionally empty to pass hole4_tests.
		// ### HOLE END
		// ### HOLE BEGIN clamp5
		if ((n % 5 == 0 || n % 7 == 0) && n != 5 && n != 7) return false;
		// ### HOLE END
		// ### HOLE BEGIN clamp6
		int r = (int) Math.sqrt(n);
		// ### HOLE END
		int f = 5;
		while (f <= r) {
			// ### HOLE BEGIN clamp7
			if (n % f == 0 || n % (f + 2) == 0) return false;
			// ### HOLE END
			// ### HOLE BEGIN clamp8
			// Intentionally empty to pass hole8_tests.
			// ### HOLE END
			// ### HOLE BEGIN clamp9
			f += 6;
			// ### HOLE END
		}
		return true;
	}